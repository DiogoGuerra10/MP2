
name: Mini2 CI Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  install-and-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mini2-app

      - name: Install ESLint globally
        run: npm install -g eslint
        working-directory: ./mini2-app

      - name: Run lint
        run: npm run lint
        working-directory: ./mini2-app

      - name: Run Prettier
        run: npm run prettier:fix
        working-directory: ./mini2-app

      - name: Run tests
        run: npm run test -- --coverage
        working-directory: ./mini2-app

  Vercel-Preview-Deploy:
    runs-on: ubuntu-latest
    needs: install-and-check
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mini2-app

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app

      - name: Build Project Artifacts
        run: |
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app

      - name: Deploy to Vercel Preview
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app

  Vercel-Deploy-Production:
    runs-on: ubuntu-latest
    needs: Vercel-Preview-Deploy
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mini2-app

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app

      - name: Deploy to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mini2-app



